# Generated by Django 4.2.4 on 2023-08-23 12:29

import car.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('maintenance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(choices=[('Audi', 'Audi'), ('Chevrolet', 'Chevrolet'), ('Cadillac', 'Cadillac'), ('Acura', 'Acura'), ('BMW', 'BMW'), ('Chrysler', 'Chrysler'), ('Ford', 'Ford'), ('Buick', 'Buick'), ('INFINITI', 'INFINITI'), ('GMC', 'GMC'), ('Honda', 'Honda'), ('Hyundai', 'Hyundai'), ('Jeep', 'Jeep'), ('Genesis', 'Genesis'), ('Dodge', 'Dodge'), ('Jaguar', 'Jaguar'), ('Kia', 'Kia'), ('Land Rover', 'Land Rover'), ('Lexus', 'Lexus'), ('Mercedes-Benz', 'Mercedes-Benz'), ('Mitsubishi', 'Mitsubishi'), ('Lincoln', 'Lincoln'), ('MAZDA', 'MAZDA'), ('Nissan', 'Nissan'), ('MINI', 'MINI'), ('Porsche', 'Porsche'), ('Ram', 'Ram'), ('Subaru', 'Subaru'), ('Toyota', 'Toyota'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo'), ('Alfa Romeo', 'Alfa Romeo'), ('FIAT', 'FIAT'), ('Freightliner', 'Freightliner'), ('Maserati', 'Maserati'), ('Tesla', 'Tesla'), ('Aston Martin', 'Aston Martin'), ('Bentley', 'Bentley'), ('Ferrari', 'Ferrari'), ('Lamborghini', 'Lamborghini'), ('Lotus', 'Lotus'), ('McLaren', 'McLaren'), ('Rolls-Royce', 'Rolls-Royce'), ('smart', 'smart'), ('Scion', 'Scion'), ('SRT', 'SRT'), ('Suzuki', 'Suzuki'), ('Fisker', 'Fisker'), ('Maybach', 'Maybach'), ('Mercury', 'Mercury'), ('Saab', 'Saab'), ('HUMMER', 'HUMMER'), ('Pontiac', 'Pontiac'), ('Saturn', 'Saturn'), ('Isuzu', 'Isuzu'), ('Panoz', 'Panoz'), ('Oldsmobile', 'Oldsmobile'), ('Daewoo', 'Daewoo'), ('Plymouth', 'Plymouth'), ('Eagle', 'Eagle'), ('Geo', 'Geo'), ('Daihatsu', 'Daihatsu'), ('Polestar', 'Polestar'), ('Rivian', 'Rivian')], max_length=50)),
                ('model', models.CharField(max_length=50, verbose_name='model')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('release_year', models.PositiveIntegerField(choices=[(1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)])),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_cars', to='user.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('post_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='user.profile')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to='car.car')),
                ('liked_by', models.ManyToManyField(blank=True, default=None, to='user.profile')),
            ],
            options={
                'ordering': ['-post_time'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TechAndSafetyFeatures',
            fields=[
                ('feature', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tech_saftey', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('content', models.TextField(blank=True)),
                ('like', models.BooleanField(default=False)),
                ('review_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='car.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UserReviews', to='user.profile')),
            ],
            options={
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='PositiveAspect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positive_aspects', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='car_performance', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='OtherInfo',
            fields=[
                ('mileage', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('condition', models.CharField(choices=[('excelent', 'ممتازة'), ('good', 'جيد'), ('small-accident', 'حادث بسيط'), ('accident', 'تعرضت لحادث'), ('other', 'أخرى')], max_length=20)),
                ('custom', models.CharField(choices=[('yes', 'مجمرك'), ('no', 'غير مجمرك')], max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_info', to='car.car')),
                ('maintenance_centers', models.ManyToManyField(blank=True, default=None, related_name='maintenance_centers', to='maintenance.maintenancecenter')),
            ],
        ),
        migrations.CreateModel(
            name='NegativeAspect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='negative_aspects', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('body_type', models.CharField(choices=[('bus', 'Bus'), ('convertible', 'Convertible'), ('Coupe', 'coupe'), ('hatchback', 'Hatchback'), ('sedan', 'Sedan'), ('suv', 'SUV'), ('pick-up', 'PickUp'), ('truck', 'Truck')], max_length=20)),
                ('color', models.CharField(max_length=10)),
                ('interior', models.TextField(blank=True, null=True)),
                ('exterior', models.TextField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featuers', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='CarSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_size', models.CharField(max_length=50)),
                ('fuel_type', models.CharField(choices=[('petrol', 'بنزين'), ('diesel', 'ديزل'), ('electric', 'كهرباء'), ('hybrid', 'هايبرد'), ('mild-hybrid', 'مايلد هايبرد'), ('plugin-hybrid', 'هايبرد - plugin')], max_length=20)),
                ('transmission_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic')], max_length=20)),
                ('weight', models.PositiveIntegerField(blank=True, null=True)),
                ('horse_power', models.PositiveIntegerField(blank=True, null=True)),
                ('torque', models.FloatField(blank=True, null=True)),
                ('speed', models.PositiveBigIntegerField(blank=True, null=True)),
                ('fuel_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_specs', to='car.car')),
            ],
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('exterior_image', models.ImageField(upload_to='exterior')),
                ('interior_image', models.ImageField(upload_to='interior')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='car_images', to='car.car')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='user.profile')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='car.tag'),
        ),
        migrations.AddConstraint(
            model_name='car',
            constraint=models.CheckConstraint(check=models.Q(('release_year__gte', 1900), ('release_year__lte', 2024)), name='valid_release_year'),
        ),
    ]
